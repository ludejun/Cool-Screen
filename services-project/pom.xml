<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.wanda.idc</groupId>
	<artifactId>coolscreen</artifactId>
	<packaging>pom</packaging>
	<version>1.0</version>
	<name>${project.artifactId}</name>
	<description></description>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.10.5</scala.version>
		<scala.binary.version>2.10</scala.binary.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cdh.hadoop.version>2.6.0-cdh5.7.2</cdh.hadoop.version>
		<cdh.hbase.version>1.2.0-cdh5.7.2</cdh.hbase.version>
		<cdh.hive.version>1.1.0-cdh5.7.2</cdh.hive.version>
		<cdh.zookeeper.version>3.4.5-cdh5.7.2</cdh.zookeeper.version>
		<cdh.flume.version>1.6.0-cdh5.7.2</cdh.flume.version>
		<cdh.spark.version>1.6.0-cdh5.7.2</cdh.spark.version>
		<cdh.avro.version>1.7.6-cdh5.7.2</cdh.avro.version>
		<cdh.solr.version>4.10.3-cdh5.7.2</cdh.solr.version>
		<akka.version>2.3.11</akka.version>
	</properties>
	<repositories>
		<repository>
			<id>public-releases</id>
			<name>public-releases</name>
			<layout>default</layout>
			<url> http://10.214.124.56:8081/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
	</repositories>

	<modules>
		<module>coolscreen-core</module>
		<module>coolscreen-model-service</module>
		<module>coolscreen-offline-datadeal-service</module>
		<module>coolscreen-online-datadeal-service</module>
	</modules>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- see http://davidb.github.com/scala-maven-plugin -->
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.0.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
					<scalaVersion>${scala.version}</scalaVersion>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
					<sourceDir>src/main/scala</sourceDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- If you have classpath issue like NoDefClassError,... -->
					<!-- useManifestOnlyJar>false</useManifestOnlyJar -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<!--<mainClass>cn.wanda.idc.wifi.Monitor</mainClass> -->
						</manifest>
					</archive>
					<archiverConfig>
						<encoding>utf-8</encoding>
					</archiverConfig>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- <phase>package</phase> -->
						<goals>
							<goal>assembly</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/libs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-shells</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/shells</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/shells</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<!-- <exclude>*.properties</exclude> -->
					<exclude>*.xml</exclude>
					<exclude>*.csv</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
</project>
